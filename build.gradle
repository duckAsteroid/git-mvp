plugins {
    id 'groovy-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.2.1'
    id "com.github.ben-manes.versions" version "0.50.0"
}

gradlePlugin {
    plugins {
        gitVersionPlugin {
            id = 'io.github.duckasteroid.git-mvp'
            displayName = 'Git Multi-project Versioning Plugin'
            description = 'A plugin to provide automated project versioning from Git tags'
            implementationClass = 'io.github.duckasteroid.git.mvp.GitVersioningPlugin'
            tags = ['version', 'git', 'publishing']
        }
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/duckasteroid/git-mvp"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    def junit = '5.11.4'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junit}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junit}"

    testImplementation 'org.slf4j:slf4j-simple:2.0.12'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(Test).configureEach {
    // Using JUnitPlatform for running tests
    useJUnitPlatform()
}

group = 'io.github.duckasteroid'
description = 'A plugin for managing multi project versions from Git'
// FIXME we can remove this when we have a version of this plugin that this plugin can use
version = '0.0.1'
